local a=assert(loadScript(SCRIPT_HOME.."/events.lua"))()local b={display=2,editing=3,saving=4,displayMenu=5}local c={notApplied,pending,applied}local d={reboot=68,eepromWrite=250}local e=b.display;local f=c.notApplied;local g=80;local h=1;local i=1;local j=0;local k=0;local l=0;local m=0;local n=false;local o=false;local p=false;local q=0;local r=0;Page=nil;backgroundFill=backgroundFill or ERASE;foregroundColor=foregroundColor or SOLID;globalTextOptions=globalTextOptions or 0;local function s(t)if Page.values then if Page.preSave then Page.preSave(Page)end;protocol.mspWrite(Page.write,Page.values)j=getTime()if e==b.saving then l=l+1 else e=b.saving;l=0;m=protocol.saveMaxRetries or 2;k=protocol.saveTimeout or 150 end end end;local function u()Page=nil;e=b.display;j=0 end;local function v()protocol.mspRead(d.reboot)u()end;local function w()protocol.mspRead(d.eepromWrite)end;local x={{t="save page",f=s},{t="reload",f=u},{t="reboot",f=v}}local function y(z,A)if z==nil or A==nil then return end;if z==Page.write then if Page.eepromWrite then w()end;n=false;return end;if z==d.eepromWrite then if Page.reboot then v()end;u()e=b.display;j=0;return end;if z~=Page.read then return end;if#A>0 then Page.values={}for B=1,#A do Page.values[B]=A[B]end;if Page.postLoad then Page.postLoad(Page)end end end;local function C()return#Page.fields end;local function D(E)h=h+E;if h>#PageFiles then h=1 elseif h<1 then h=#PageFiles end;i=1 end;local function F(E)i=i+E;if i>C()then i=1 elseif i<1 then i=C()end end;local function G(E)p=p+E;if p>#x then p=1 elseif p<1 then p=#x end end;local function H()if Page.read and(Page.reqTS==nil or Page.reqTS+g<=getTime())then Page.reqTS=getTime()protocol.mspRead(Page.read)end end;function drawScreenTitle(I)lcd.drawFilledRectangle(0,0,LCD_W,10)lcd.drawText(1,1,I,INVERS)end;local function J()local I=Page.title;drawScreenTitle("Betaflight / "..I)for B=1,#Page.text do local K=Page.text[B]if K.to==nil then lcd.drawText(K.x,K.y,K.t,globalTextOptions)else lcd.drawText(K.x,K.y,K.t,K.to)end end;local L="---"for B=1,#Page.fields do local K=Page.fields[B]local M=K.to or globalTextOptions;local N=M;local O=M;if B==i then O=M+INVERS;if e==b.editing then O=O+BLINK end end;local P=20;if K.t~=nil then lcd.drawText(K.x,K.y,K.t,N)if K.sp~=nil then P=K.sp end else P=0 end;if Page.values then if(#Page.values or 0)>=Page.minBytes then if not K.value and K.vals then for Q=1,#K.vals do K.value=bit32.bor(K.value or 0,bit32.lshift(Page.values[K.vals[Q]],(Q-1)*8))end;K.value=K.value/(K.scale or 1)end end end;if K.value then if K.upd and Page.values then K.upd(Page)end;L=K.value;if K.table and K.table[K.value]then L=K.table[K.value]end end;lcd.drawText(K.x+P,K.y,L,O)end end;local function R(L,S,T)if L<S then L=S elseif L>T then L=T end;return L end;local function U()return Page.fields[i]end;local function V(E)local K=Page.fields[i]local Q=K.i or i;local W=K.scale or 1;K.value=R(K.value+E*(K.mult or 1)/W,K.min/W or 0,K.max/W or 255)for Q=1,#K.vals do Page.values[K.vals[Q]]=bit32.rshift(K.value*W,(Q-1)*8)end;if K.upd and Page.values then K.upd(Page)end end;local function X()local Y=MenuBox.x;local Z=MenuBox.y;local _=MenuBox.w;local a0=MenuBox.h_line;local a1=MenuBox.h_offset;local a2=#x*a0+a1*2;lcd.drawFilledRectangle(Y,Z,_,a2,backgroundFill)lcd.drawRectangle(Y,Z,_-1,a2-1,foregroundColor)lcd.drawText(Y+a0/2,Z+a1,"Menu:",globalTextOptions)for B,a3 in ipairs(x)do local M=globalTextOptions;if p==B then M=M+INVERS end;lcd.drawText(Y+MenuBox.x_offset,Z+(B-1)*a0+a1,a3.t,M)end end;function loadPageFile(Q)if Q<=#PageFiles then Page=assert(loadScript(radio.templateHome..PageFiles[Q]))()end end;function checkPersistence()f=c.applied end;function run_ui(a4)local a5=getTime()if q+50<a5 then u()end;q=a5;if e==b.saving then if j+k<a5 then if l<m then s()else e=b.display;u()end end end;mspProcessTxQ()if a4==a.longPress.menu then p=1;e=b.displayMenu elseif a.press.pageUp and a4==a.longPress.enter then p=1;r=1;e=b.displayMenu elseif e==b.displayMenu then if a4==a.release.exit then e=b.display elseif a4==a.release.plus or a4==a.dial.left then G(-1)elseif a4==a.release.minus or a4==a.dial.right then G(1)elseif a4==a.release.enter then if r==1 then r=0 else e=b.display;x[p].f()end end elseif e<=b.display then if a4==a.press.pageUp then Page=nil;D(-1)elseif a4==a.release.menu or a4==a.press.pageDown then Page=nil;D(1)elseif a4==a.release.plus or a4==a.dial.left then F(-1)elseif a4==a.release.minus or a4==a.dial.right then F(1)elseif a4==a.release.enter then local a6=Page.fields[i]local Q=a6.i or i;if Page.values and Page.values[Q]and a6.ro~=true then e=b.editing end elseif a4==a.release.exit then return protocol.exitFunc()end elseif e==b.editing then if a4==a.release.exit or a4==a.release.enter then e=b.display elseif a4==a.press.plus or a4==a.repeatPress.plus or a4==a.dial.right then V(1)elseif a4==a.press.minus or a4==a.repeatPress.minus or a4==a.dial.left then V(-1)end end;if f==c.applied then if Page==nil then loadPageFile(h)end;if not Page.values and e==b.display then H()end;lcd.clear()if TEXT_BGCOLOR then lcd.drawFilledRectangle(0,0,LCD_W,LCD_H,TEXT_BGCOLOR)end;J()if protocol.rssi()==0 then lcd.drawText(NoTelem[1],NoTelem[2],NoTelem[3],NoTelem[4])if f==c.applied or f==c.pending then f=c.notApplied end end;if e==b.displayMenu then X()elseif e==b.saving then lcd.drawFilledRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,backgroundFill)lcd.drawRectangle(SaveBox.x,SaveBox.y,SaveBox.w,SaveBox.h,SOLID)lcd.drawText(SaveBox.x+SaveBox.x_offset,SaveBox.y+SaveBox.h_offset,"Saving...",DBLSIZE+BLINK+globalTextOptions)end end;y(mspPollReply())return 0 end;return{run=run_ui,background=checkPersistence}
